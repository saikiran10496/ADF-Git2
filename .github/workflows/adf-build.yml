name: ADF Build Pipeline

on:
 push:
   branches:
     - main

permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PACKAGE_FOLDER: 'build'
      ADF_ROOT_FOLDER: ''
      TIMESTAMP: ${{ github.run_number }}-$(date +'%Y%m%d-%H%M%S')
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 18.x
          
      - name: Install ADF Utilities package
        run: npm install
        working-directory: ${{github.workspace}}/build
        
      - name: Validate
        run: |
          npm run build validate ${{ github.workspace }}/$ADF_ROOT_FOLDER \
            /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.RESOURCE_GROUP }}/providers/Microsoft.DataFactory/factories/${{ secrets.DATA_FACTORY_NAME }}
        working-directory: ${{github.workspace}}/build

      - name: Generate ARM Template
        run: |
          npm run build export ${{ github.workspace }}/$ADF_ROOT_FOLDER \
            /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.RESOURCE_GROUP }}/providers/Microsoft.DataFactory/factories/${{ secrets.DATA_FACTORY_NAME }} "export"
        working-directory: ${{github.workspace}}/build
        
      - name: Archive Build Artifact
        run: |
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          ARTIFACT_NAME="adfexport-${TIMESTAMP}.zip"
          echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV
          
          # Ensure directory exists and contains files before zipping
          if [ -d "${GITHUB_WORKSPACE}/build/export" ] && [ "$(ls -A ${GITHUB_WORKSPACE}/build/export)" ]; then
            zip -r "${GITHUB_WORKSPACE}/${ARTIFACT_NAME}" "${GITHUB_WORKSPACE}/build/export"
          else
            echo "Error: No files found in build/export to zip!"
            exit 1
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: adf-build-${{ github.run_number }}
          name: "ADF Build ${{ github.run_number }}"
          draft: false
          prerelease: false
          files: ${{ env.ARTIFACT_NAME }}
          token: ${{ secrets.GH_PAT }} 
